file("cf-deploy.gradle.properties").withInputStream { input ->
    def p = new Properties()
    p.load(input)
    p.each { k, v -> project.ext.set(k, v) }
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'org.cloudfoundry', name: 'cf-gradle-plugin', version: '1.1.1'
    }
}

apply plugin: 'cloudfoundry'

ext {
  productionEnv = project.hasProperty('prod')
  cfEnvLabel = productionEnv ? 'prod' : 'dev'
}

cloudfoundry {
    application = "plugins-grails-org-${cfEnvLabel}"
    target = 'https://api.run.pivotal.io'
    organization = 'grails-org'
    space = productionEnv ? 'production' : 'development'
    file = file("target/grails-website.war")
    buildpack = "https://github.com/grails-samples/java-buildpack.git#grails-website"
    env = [
        "JAVA_OPTS": "-Dfile.encoding=UTF-8 -Duser.language=en -Duser.country=US"
    ]
    mergeEnv = true
    healthCheckTimeout = 120
    memory = 2048
    instances = 1
    variants = ['-blue', '-green']
    domain = 'grails.org'
    host = productionEnv ? 'prod' : 'staging'
    services {
      "db-grails-org-${cfEnvLabel}" {
        label = 'cleardb'
        plan = 'boost'
        bind = true
      }
      "sendgrid-grails-org-${cfEnvLabel}" {
        label = 'sendgrid'
        plan = 'free'
        bind = true
      }
    }
}
